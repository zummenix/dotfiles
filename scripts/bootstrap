#!/usr/bin/env bash

# Echos out a description of a task.
function desc {
    tput bold && tput setaf 2
    echo ""
    echo "ยง $1"
    tput sgr0
}

# Ensures a direcotry exists.
function dir {
    if test -d "$1"; then
        echo "$1 exists."
    else
        mkdir "$1" && echo "$1 has been created."
    fi
}

# Ensures a git repo is up to date.
function pull {
    if test -d "$2"; then
        cd "$2" && git pull
    else
        git clone "$1" "$2"
    fi
}

# Installs a tool from a git repository.
function git-cargo-install {
    desc "Installing $2"
    pull "$1" "$2" && cd "$2" && \
        sh "$HOME"/projects/dotfiles/scripts/cargo-install-stripped && cargo clean
}

# Installs a tool.
function cargo-install {
    desc "Installing $1"
    cargo install "$1"
}

# Creates a symbolic link to a file or a directory.
function symlink {
    ln -hfs "$1" "$2"
    ls -l "$2"
}

CONFIG_DIR="$HOME/.config"
PROJECTS_DIR="$HOME/projects"

desc "Ensure xcode command line tools are installed"
xcode-select --install

desc "Ensure homebrew is up to date"
if test -x "$(command -v brew)"; then
    brew update
else
    /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"
fi

desc "Ensure rustup is installed"
if test -x "$(command -v rustup)"; then
    echo "rustup is installed."
else
    curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh
fi

desc "Ensure rust is installed and up to date"
rustup self update
rustup update stable

rustup component add llvm-tools-preview
rustup target add thumbv7em-none-eabihf

desc "Ensure ~/.config directory exists"
dir "$CONFIG_DIR"

desc "Ensure ~/projects directory exists"
dir "$PROJECTS_DIR"

desc "Pull dotfiles repository"
pull "https://github.com/zummenix/dotfiles" "$PROJECTS_DIR/dotfiles"

desc "Pull base16 colorscheme repository"
pull "https://github.com/chriskempson/base16-shell.git" "$CONFIG_DIR/base16-shell"

desc "Install/cleanup dependencies using Brewfile"
brew bundle --cleanup --file "$PROJECTS_DIR/dotfiles/Brewfile" -v

desc "Symlink neovim settings"
symlink "$PROJECTS_DIR/dotfiles/nvim" "$CONFIG_DIR/nvim"

desc "Symlink fish settings"
symlink "$PROJECTS_DIR/dotfiles/fish" "$CONFIG_DIR/fish"

desc "Symlink tig settings"
symlink "$PROJECTS_DIR/dotfiles/tig/.tigrc" "$HOME/.tigrc"

git-cargo-install "git@github.com:zummenix/xcopen.git" "$PROJECTS_DIR/xcopen"
git-cargo-install "git@github.com:zummenix/mprovision.git" "$PROJECTS_DIR/mprovision"

cargo-install cargo-bloat
cargo-install cargo-outdated
cargo-install cargo-insta
cargo-install cargo-diet
cargo-install cargo-audit

cargo-install ytop
cargo-install ripgrep
cargo-install tokei

cargo-install itm
cargo-install cargo-binutils

desc "Ensure neovim plugins are up to date"
echo "Launching neovim."
nvim +PlugInstall +PlugClean +PlugUpdate +PlugUpgrade

desc "Switch current shell to fish"
if test $(echo "$SHELL" | grep fish); then
    echo "Already fish."
else
    LINE="$(which fish)"
    FILE=/etc/shells
    grep -qF -- "$LINE" "$FILE" || echo "$LINE" | sudo tee -a "$FILE"
    chsh -s $LINE && echo "Done. Please open a new terminal tab or window to see the change."
fi
